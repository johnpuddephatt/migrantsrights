{"version":3,"sources":["webpack:///./resources/scripts/app.js","webpack:///./resources/scripts/gap-polyfill.js","webpack:///./resources/scripts/people-blocks.js"],"names":["window","Alpine","c","d","polyfillList","ungapful","polyfillNode","element","ecss","getComputedStyle","test","shadowRoot","mode","shadowEcss","onFrameSkip","requestAnimationFrame","polyfillInit","Array","MutationObserver","addedNodes","addedNode","mo","childList","subtree","headings","document","btn","heading","target","expanded"],"mappings":"mHAKAA,kBAEAC,a,oiCCPA,SAAC,OAECC,EAFD,uDAEKC,qBAFL,MAICC,GAJD,4CAGMF,MAHN,0DAIgB,IAJhB,SAKCG,EALD,yEAMCC,EAND,uDAMgB,YACb,IAAIF,MAAJ,KACAA,aACIG,EAAJ,aACA,IAAMC,EAAOC,iBAAb,GACA,GACE,mBAAmBC,KAAKF,EAAxB,WACCH,OAAcG,SAAcA,EAF/B,WAGE,CACA,IAAMG,EAAaJ,EAAA,aAAqB,CAAEK,KAAM,SAC1CC,EAAaF,cAAuBR,gBAA1C,UACmBQ,cAAuBR,gBAA1C,UACoB,SAAdW,IACJD,iDAAqDL,EAArDK,2BAA4EL,EAA5EK,mGAA2KL,EAA3KK,4BAAmML,EAAnMK,qDACAE,sBAAsBA,gCAAtBA,IAEFD,MAGJE,EAzBD,uDAyBgB,WACbC,WAAWd,EAAXc,OACS,IAAIC,kBAAiB,YAAa,iBACzC,2BAAsC,mBAAzBC,YAAyB,IACpC,2BAAoC,KAAzBC,EAAyB,QAClC,IAAIA,YACFd,MAHgC,gCADG,kCAS3Ce,UAAc,CAAEC,WAAF,EAAmBC,SAAS,KAEzCrB,OAASc,IAtCd,Y,eCAA,IACQQ,IAAWC,0BAAjB,sCAIAR,gCAAuC,YACrC,IAAIS,EAAMC,gBAAV,UACIC,EAASD,EAAb,mBAEAC,YAEAF,UAAc,WACZ,IAAIG,EAAWH,2CAAf,EAEAA,mCACAE,gB","file":"/scripts/app.js","sourcesContent":["// import 'jquery';\nimport './gap-polyfill';\nimport './people-blocks';\nimport Alpine from 'alpinejs';\n\nwindow.Alpine = Alpine;\n\nAlpine.start();\n","((\n  d,\n  c = d.createElement('b').style,\n  a = (c.gap = 0),\n  polyfillList = new WeakMap(),\n  ungapful = /^(normal|0px)+$/,\n  polyfillNode = (element) => {\n    if (polyfillList.has(element)) return;\n    polyfillList.set(element, true);\n    if (element.shadowRoot) return;\n    const ecss = getComputedStyle(element);\n    if (\n      /^(inline-)?flex$/.test(ecss.display) &&\n      !ungapful.test(ecss.rowGap + ecss.columnGap)\n    ) {\n      const shadowRoot = element.attachShadow({ mode: 'open' });\n      const shadowEcss = shadowRoot.appendChild(d.createElement('style'));\n      const shadowSlot = shadowRoot.appendChild(d.createElement('slot'));\n      const onFrameSkip = () => {\n        shadowEcss.textContent = `::slotted(*){margin:calc(${ecss.rowGap}/2) calc(${ecss.columnGap}/2)}slot{display:inherit;flex-direction:inherit;flex-wrap:inherit;margin:calc(${ecss.rowGap}/-2) calc(${ecss.columnGap}/-2);max-height:-webkit-fill-available}`;\n        requestAnimationFrame(requestAnimationFrame.bind(null, onFrameSkip));\n      };\n      onFrameSkip();\n    }\n  },\n  polyfillInit = () => {\n    Array.from(d.all, polyfillNode);\n    let mo = new MutationObserver((records) => {\n      for (const { addedNodes } of records) {\n        for (const addedNode of addedNodes) {\n          if (addedNode.nodeType === 1) {\n            polyfillNode(addedNode);\n          }\n        }\n      }\n    });\n    mo.observe(d, { childList: true, subtree: true });\n  }\n) => c.gap || polyfillInit())(document);\n","(function () {\n  const headings = document.querySelectorAll(\n    '.wp-block-person .wp-block-columns'\n  );\n\n  Array.prototype.forEach.call(headings, (heading) => {\n    let btn = heading.querySelector('button');\n    let target = heading.nextElementSibling;\n\n    target.hidden = true;\n\n    btn.onclick = () => {\n      let expanded = btn.getAttribute('aria-expanded') === 'true' || false;\n\n      btn.setAttribute('aria-expanded', !expanded);\n      target.hidden = expanded;\n    };\n  });\n})();\n"],"sourceRoot":""}